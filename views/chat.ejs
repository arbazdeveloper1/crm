<!DOCTYPE html>
<html lang="en">


<head>
  <meta charset="UTF-8">
  <meta content="width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=no" name="viewport">
  <title>Dashboard </title>
  <!-- General CSS Files -->
  <link rel="stylesheet" href="/assets/css/app.min.css">
  <!-- Template CSS -->
  <link rel="stylesheet" href="/assets/css/style.css">
  <link rel="stylesheet" href="/assets/css/components.css">
  <!-- Custom style CSS -->
  <link rel="stylesheet" href="/assets/css/custom.css">
  <!-- toastr -->
  <link rel="stylesheet" href="/assets/bundles/izitoast/css/iziToast.min.css">
  <script src="/assets/bundles/izitoast/js/iziToast.min.js"></script>
</head>
<style>
  .status i.online {
    color: green;
}

.status i.offline {
    color: red;
}
.start-chat {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: #555;
    font-family: "Poppins", sans-serif;
    text-align: center;
    padding: 20px;
    border-radius: 10px;
    background: #f8f9fa;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
}

.start-chat h4 {
    font-size: 24px;
    font-weight: 600;
    margin-top: 15px;
    color: #333;
}

.start-chat p {
    font-size: 16px;
    color: #777;
    margin-top: 5px;
}

.chat-image {
    width: 150px;
    opacity: 0.8;
}

</style>

<body>
  <!-- <div class="loader"></div> -->
  <div id="app">
    <div class="main-wrapper main-wrapper-1">
      <div class="navbar-bg"></div>
      <%-include('./common/Header.ejs') %>
      <% if (userRole === 'admin') { %>
        <%- include('./common/AdminSidebar.ejs') %>
      <% } else if (userRole === 'agent') { %>
        <%- include('./common/AgentSidebar.ejs') %>
      <% } %>
      



          <!-- Main Content -->
           <input type="hidden" name="" id="senderid" value="<%- senderid %>">
          <div class="main-content">
            <section class="section">
              <div class="section-body">
                <div class="row">
                  <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <div class="card">
                      <div class="body">
                        <div id="plist" class="people-list">
                          <div class="chat-search">
                            <input type="text" class="form-control" id="search" placeholder="Search..." />
                          </div>
                          <div class="m-b-20">
                            <div id="chat-scroll">
                              <ul class="chat-list list-unstyled m-b-0">

                                <% for(let i=0; i<data.length; i++) { %>
                                  <% if(data[i]?.id != senderid) { %>
                                  
                                <li class="clearfix" data-id="<%- data[i]?.id %>">
                                  <img src="<%= data[i]?.profile_img ? 'profileimg/' + data[i]?.profile_img : '/assets/img/users/img.avif' %>" alt="avatar">
                                  <div class="about">
                                    <div class="name"><%- data[i]?.full_name %></div>
                                    <div class="status">
                                      <i class="material-icons offline">fiber_manual_record</i>
                                      <span id="online_status"></span>
                                    </div>
                                  </div>
                                </li>
                                <% } %>
                                <% } %>
                               
                              </ul>
                              
                            </div>
                          </div>

                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <div class="col-xs-12 col-sm-12 col-md-9 col-lg-9">
                    <div id="startChatMessage" class="start-chat text-center">
                      <img src="/assets/img/users/kk.jpg" alt="Chat Illustration" class="chat-image">
                      <h4>Start Chatting</h4>
                      <p>Select a user to begin your conversation</p>
                  </div>
                  
                
                 
                    <div id="chatContainer" class="card" style="display: none;">
                        <div class="chat">
                            <div class="chat-header clearfix">
                                <img src="/assets/img/users/avatar.png" alt="avatar">
                                <div class="chat-about">
                                    <div class="chat-with" id="chatUserName">selected user name</div>
                                    <div class="chat-num-messages">
                                      <i class="material-icons offline">fiber_manual_record</i>
                                      <span id="head_status"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                
                        <div class="chat-box" id="mychatbox">
                            <div class="card-body chat-content" tabindex="2" style="overflow: scroll; outline: none;">
                                <div class="chat-item chat-left">
                                    <img src="/assets/img/users/user-5.png">
                                    <div class="chat-details">
                                        <div class="chat-text">Hi, How R U?!</div>
                                        <div class="chat-time">02:38</div>
                                    </div>
                                </div>
                            </div>
                
                            <div class="card-footer chat-form">
                                <input type="text" class="form-control" id="messageInput" placeholder="Type a message" style="border: 1px solid black;">
                                <button onclick="sendMessage()" class="btn btn-primary">
                                    <i class="far fa-paper-plane"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                  </div>
                
                </div>
              </div>
            </section>
          </div>
    </div>
  </div>

  
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io(); // Connect to the server

    socket.on("connect", () => {
        console.log("Connected to server with ID:", socket.id);
    });

    socket.on("updateOnlineUsers", (onlineUsers) => {
    $(".chat-list li").each(function () {
        let userId = $(this).attr("data-id");
        let statusIcon = $(this).find(".status i");
        let statusText = $(this).find("#online_status");

        if (onlineUsers.includes(userId)) {
            statusIcon.removeClass("offline").addClass("online");
            statusText.text("Online"); // Update text


        } else {
            statusIcon.removeClass("online").addClass("offline");
            statusText.text("Offline"); // Update text
        }

        
    });
});
socket.on("updateOnlineUsers", (onlineUsers) => {
  $(".chat-list li").on("click", function () {
    let userId = this.getAttribute("data-id");

    let statusIcon = this.querySelector(".status i");
    let statusText = this.querySelector("#online_status");  

    if (onlineUsers.includes(userId)) {
        statusIcon.classList.remove("offline");
        statusIcon.classList.add("online");
        statusText.textContent = "Online";
    } else {
        statusIcon.classList.remove("online");
        statusIcon.classList.add("offline");
        statusText.textContent = "Offline";
    }

    let chatIcon = document.querySelector("#chatContainer .chat-num-messages i");
    let chatText = document.querySelector("#chatContainer #head_status");

    if (chatIcon && chatText) {
        chatIcon.classList.toggle("online", onlineUsers.includes(userId));
        chatIcon.classList.toggle("offline", !onlineUsers.includes(userId));
        chatText.textContent = onlineUsers.includes(userId) ? "Online" : "Offline";
    }
  });
});



    let selectedUserId = null; // Store the selected user ID globally

    $(document).ready(function () {
    const sender_id = document.getElementById('senderid').value;
    
    socket.emit("registerUser", sender_id); // Register user with their ID

    $(".chat-list li").on("click", function () {
        selectedUserId = $(this).attr("data-id");
        let selectedUserName = $(this).find(".name").text();

        $(".chat-list li").removeClass("active");
        $(this).addClass("active");

        $("#chatUserName").text(selectedUserName);
        $("#startChatMessage").hide();
        $("#chatContainer").show();

        fetchChats(selectedUserId);
    });
});



function sendMessage() {
    const input = document.getElementById("messageInput");
    const sender_id = document.getElementById('senderid').value;

    if (!selectedUserId) {
        alert("Please select a user to send a message.");
        return;
    }

    const message = input.value.trim();
    if (message) {
        const data = {
            sender_id: sender_id,
            receiver_id: selectedUserId,
            message: message
        };

        socket.emit("message", data); // Send message
        input.value = "";        

      }
      appendMessage("chat-right", message); 
}


function appendMessage(position, message, receiverimg, senderimg) {
    let date = new Date();
    let formattedTime = date.toLocaleTimeString("en-US", {
        hour: "2-digit",
        minute: "2-digit",
        hour12: false
    });

    let chatContent = $(".chat-content");

    $(".chat-content").append(`
        <div class="chat-item ${position}">
            <img src="profileimg/${position === 'chat-right' ? receiverimg : senderimg}">
            <div class="chat-details">
                <div class="chat-text">${message}</div>
                <div class="chat-time">${formattedTime}</div>
            </div>
        </div>
    `);

    chatContent.scrollTop(chatContent[0].scrollHeight);
    chatContent[0].offsetHeight;
}


socket.on("newMessage", (data) => {
    const sender_id = document.getElementById('senderid').value;

    if (
        (data.sender_id === sender_id && data.receiver_id === selectedUserId) ||
        (data.sender_id === selectedUserId && data.receiver_id === sender_id)
    ) {
        let position = data.sender_id === sender_id ? "chat-right" : "chat-left";

        setTimeout(() => {
            appendMessage(position, data.message);
        }, 300);
    }
});




function fetchChats(receiverid) {
    let sender_id = document.getElementById('senderid').value;
    $.ajax({
        url: `/getChats/${sender_id}/${receiverid}`,
        method: "GET",
        success: function (res) {
            if (res.data) {
                $(".chat-content").html("");
                res.data.forEach(chat => {
                    let position = chat.sender === sender_id ? "chat-right" : "chat-left";
                    appendMessage(position, chat.message, res.receiverimg, res.senderimg);
                });
            }
        },
        error: function (err) {
            console.log("Error fetching chats:", err);
        }
    });
}


document.getElementById("messageInput").addEventListener("keypress", function (event) {
    if (event.key === "Enter" && !event.shiftKey) {
        event.preventDefault();
        sendMessage();
    }
});

    document.addEventListener("DOMContentLoaded", function () {
    const searchInput = document.getElementById("search");
    const chatListItems = document.querySelectorAll(".chat-list li");

    searchInput.addEventListener("input", function () {
        let searchValue = searchInput.value.toLowerCase().trim();

        chatListItems.forEach((item) => {
            let userName = item.querySelector(".name").textContent.toLowerCase();
            
            if (userName.includes(searchValue)) {
                item.style.display = ""; // Show the item
            } else {
                item.style.display = "none"; // Hide the item
            }
        });
    });
});

</script>


  <!-- General JS Scripts -->
  <script src="/assets/js/app.min.js"></script>
  <!-- JS Libraies -->
  <script src="/assets/bundles/apexcharts/apexcharts.min.js"></script>
  <!-- Page Specific JS File -->
  <script src="/assets/js/page/chat.js"></script>
  <!-- Template JS File -->
  <script src="/assets/js/scripts.js"></script>
  <!-- Custom JS File -->
  <script src="/assets/js/custom.js"></script>
</body>


</html>